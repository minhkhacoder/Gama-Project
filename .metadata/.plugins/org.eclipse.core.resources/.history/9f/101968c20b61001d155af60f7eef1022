/**
* Name: ModelChouChevLoup
* Based on the internal empty template. 
* Author: KHA
* Tags: 
*/


model ModelChouChevLoup

/* Insert your model definition here */



global {
	geometry shape <- square(3000#m);
	float growth_rate <- 0.2;
	float initial_energy <- 10.0;
	
	init {
		create wolf number: 100;
		create goat number: 15;
	}
}

grid plot width:30 height:30 neighbors:8 {
	float biomass;
	float carrying_capacity;
	float max_carrying_capacity <- 10.0;
	rgb color <- rgb(0,255 * biomass / max_carrying_capacity,0)
		update: rgb(0,255 * biomass / max_carrying_capacity,0);
	bool is_free <- false;
		
	init {
		carrying_capacity <- rnd(max_carrying_capacity);
		biomass <- rnd(carrying_capacity);
		color <- rgb(0,255 * biomass / max_carrying_capacity,0);
	}
	
	aspect plotCarryingCapacity {
		draw circle(50) color: rgb(0,255 * carrying_capacity / max_carrying_capacity,0);
	}
	
	reflex grow { 		
	    if(carrying_capacity != 0) {
	    	biomass <- biomass * (1 + growth_rate * (1 - biomass / carrying_capacity));
	    }
	}

}

species animal {
	plot my_plot;
	float energy <- initial_energy;
	
	init {
		plot plot_random <- one_of(plot where(each.is_free = true));
		do move_to_cell(plot_random);
	}
	
	reflex energy_loss {
		energy <- energy - 1;
	}

	reflex death when: energy <= 0.0 {
		do die;
	}
	
	reflex move {
		plot next_plot <- one_of(my_plot.neighbors where(each.is_free = true));
		do move_to_cell(next_plot);
	}
	
	action move_to_cell(plot new_plot) {
		if(my_plot != nil) {
			my_plot.is_free <- true;
		}
		
		new_plot.is_free <- false;
		my_plot <- new_plot;
		location <- new_plot.location;
	}
}

species wolf parent: animal {
	plot next_plot <- nil;
	reflex move {
		list<plot> neigh <- my_plot.neighbors where(!empty(goat inside each ));
		
		if(empty(neigh)) {
			next_plot <- one_of(my_plot.neighbors where(each.is_free = true));
		} else {
			next_plot <- one_of(neigh);
//			goat victim <- one_of(goat inside next_plot);
//			energy <- energy + victim.energy;
//			ask victim {
//				write "" + self + " will die";
//				do die;
//			}
		}
		do move_to_cell(next_plot);
	}
	
	
	aspect whiteCircle {
		draw circle(20) color: #white;
	}
}

species goat {
	
	aspect redCircle {
		draw circle(20) color: #red;
	}
}




experiment ChouChevLoup type: gui {
	output {
	 display biomass { 
		grid plot border: #lightslategrey;
		species wolf aspect: whiteCircle;
		species goat aspect: redCircle;
	 }
//	 display carrying_capacity { 
//		species plot aspect: plotCarryingCapacity;
//	 }

	}
}
